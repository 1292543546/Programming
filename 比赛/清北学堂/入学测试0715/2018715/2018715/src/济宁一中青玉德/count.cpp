#include<iostream>
#include<fstream>
using namespace std;

ifstream fin("count.in");
ofstream fout("count.out");

char A[4][4];
int ans1,ans2;

bool vis1[30];
bool vis2[30][30];

int main()
{
	for(int i=1;i<=3;i++)
	{
		for(int j=1;j<=3;j++) 
		{
			fin>>A[i][j];
		}
	}
	if(A[1][1]==A[1][2]&&A[1][2]==A[1][3]) {if(!vis1[A[1][1]-'A']) { ans1++; vis1[A[1][1]-'A']=1;}}
	if(A[1][1]==A[2][1]&&A[2][1]==A[3][1]) {if(!vis1[A[1][1]-'A']) { ans1++; vis1[A[1][1]-'A']=1;}}
	if(A[1][1]==A[2][2]&&A[2][2]==A[3][3]) {if(!vis1[A[1][1]-'A']) { ans1++; vis1[A[1][1]-'A']=1;}}
	if(A[2][1]==A[2][2]&&A[2][2]==A[2][3]) {if(!vis1[A[2][1]-'A']) { ans1++; vis1[A[2][1]-'A']=1;}}
	if(A[3][1]==A[3][2]&&A[3][2]==A[3][3]) {if(!vis1[A[3][1]-'A']) { ans1++; vis1[A[3][1]-'A']=1;}}
	if(A[1][2]==A[2][2]&&A[2][2]==A[3][2]) {if(!vis1[A[1][2]-'A']) { ans1++; vis1[A[1][2]-'A']=1;}}
	if(A[1][3]==A[2][3]&&A[2][3]==A[3][3]) {if(!vis1[A[1][3]-'A']) { ans1++; vis1[A[1][3]-'A']=1;}}
	if(A[3][1]==A[2][2]&&A[2][2]==A[1][3]) {if(!vis1[A[3][1]-'A']) { ans1++; vis1[A[3][1]-'A']=1;}}
	
	
	if(A[1][1]==A[1][2]&&A[1][2]!=A[1][3]) {if(!vis2[A[1][1]-'A'][A[1][2]-'A']) { ans2++; vis2[A[1][1]-'A'][A[1][2]-'A']=1;}}
	if(A[1][1]!=A[1][2]&&A[1][2]==A[1][3]) {if(!vis2[A[1][2]-'A'][A[1][3]-'A']) { ans2++; vis2[A[1][1]-'A'][A[1][3]-'A']=1;}}
	if(A[1][1]==A[1][3]&&A[1][1]!=A[1][2]) {if(!vis2[A[1][1]-'A'][A[1][3]-'A']) { ans2++; vis2[A[1][1]-'A'][A[1][3]-'A']=1;}}
	
	if(A[1][1]==A[2][1]&&A[2][1]!=A[3][1]) {if(!vis2[A[1][1]-'A'][A[2][1]-'A']) { ans2++; vis2[A[1][1]-'A'][A[2][1]-'A']=1;}}
	if(A[1][1]!=A[2][1]&&A[2][1]==A[3][1]) {if(!vis2[A[2][1]-'A'][A[3][1]-'A']) { ans2++; vis2[A[2][1]-'A'][A[3][1]-'A']=1;}}
	if(A[1][1]==A[3][1]&&A[2][1]!=A[1][1]) {if(!vis2[A[1][1]-'A'][A[3][1]-'A']) { ans2++; vis2[A[1][1]-'A'][A[3][1]-'A']=1;}}
	
	if(A[1][1]==A[2][2]&&A[2][2]!=A[3][3]) {if(!vis2[A[1][1]-'A'][A[2][2]-'A']) { ans2++; vis2[A[1][1]-'A'][A[2][2]-'A']=1;}}
	if(A[1][1]!=A[2][2]&&A[2][2]==A[3][3]) {if(!vis2[A[2][2]-'A'][A[3][3]-'A']) { ans2++; vis2[A[1][1]-'A'][A[3][3]-'A']=1;}}
	if(A[1][1]==A[3][3]&&A[2][2]!=A[1][1]) {if(!vis2[A[1][1]-'A'][A[3][3]-'A']) { ans2++; vis2[A[1][1]-'A'][A[3][3]-'A']=1;}}
	
	if(A[2][1]==A[2][2]&&A[2][2]!=A[2][3]) {if(!vis2[A[2][1]-'A'][A[2][2]-'A']) { ans2++; vis2[A[2][1]-'A'][A[2][2]-'A']=1;}}
	if(A[2][1]!=A[2][2]&&A[2][2]==A[2][3]) {if(!vis2[A[2][2]-'A'][A[2][3]-'A']) { ans2++; vis2[A[2][2]-'A'][A[2][3]-'A']=1;}}
	if(A[2][1]==A[2][3]&&A[2][2]!=A[2][1]) {if(!vis2[A[2][1]-'A'][A[2][3]-'A']) { ans2++; vis2[A[2][1]-'A'][A[2][3]-'A']=1;}}
	
	if(A[3][1]==A[3][2]&&A[3][2]!=A[3][3]) {if(!vis2[A[3][1]-'A'][A[3][2]-'A']) { ans2++; vis2[A[3][1]-'A'][A[3][2]-'A']=1;}}
	if(A[3][1]!=A[3][2]&&A[3][2]==A[3][3]) {if(!vis2[A[3][2]-'A'][A[3][3]-'A']) { ans2++; vis2[A[3][2]-'A'][A[3][3]-'A']=1;}}
	if(A[3][1]==A[3][3]&&A[3][2]!=A[3][1]) {if(!vis2[A[3][1]-'A'][A[3][3]-'A']) { ans2++; vis2[A[3][1]-'A'][A[3][3]-'A']=1;}}
	
	if(A[1][2]==A[2][2]&&A[2][2]!=A[3][2]) {if(!vis2[A[1][2]-'A'][A[2][2]-'A']) { ans2++; vis2[A[1][1]-'A'][A[2][2]-'A']=1;}}
	if(A[1][2]!=A[2][2]&&A[2][2]==A[3][2]) {if(!vis2[A[2][2]-'A'][A[3][2]-'A']) { ans2++; vis2[A[2][2]-'A'][A[3][2]-'A']=1;}}
	if(A[1][2]==A[3][2]&&A[2][2]!=A[1][2]) {if(!vis2[A[1][2]-'A'][A[3][2]-'A']) { ans2++; vis2[A[1][2]-'A'][A[3][2]-'A']=1;}}
	
	if(A[1][3]==A[2][3]&&A[2][3]!=A[3][3]) {if(!vis2[A[1][3]-'A'][A[2][3]-'A']) { ans2++; vis2[A[1][3]-'A'][A[2][3]-'A']=1;}}
	if(A[1][3]!=A[2][3]&&A[2][3]==A[3][3]) {if(!vis2[A[2][3]-'A'][A[3][3]-'A']) { ans2++; vis2[A[2][3]-'A'][A[3][3]-'A']=1;}}
	if(A[1][3]==A[3][3]&&A[2][3]!=A[1][3]) {if(!vis2[A[1][3]-'A'][A[3][3]-'A']) { ans2++; vis2[A[1][3]-'A'][A[3][3]-'A']=1;}}
	
	if(A[3][1]==A[2][2]&&A[2][2]!=A[1][3]) {if(!vis2[A[3][1]-'A'][A[2][2]-'A']) { ans2++; vis2[A[3][1]-'A'][A[2][2]-'A']=1;}}
	if(A[3][1]!=A[2][2]&&A[2][2]==A[1][3]) {if(!vis2[A[2][2]-'A'][A[1][3]-'A']) { ans2++; vis2[A[2][2]-'A'][A[1][3]-'A']=1;}}
	if(A[3][1]==A[1][3]&&A[2][2]!=A[3][1]) {if(!vis2[A[3][1]-'A'][A[1][3]-'A']) { ans2++; vis2[A[3][1]-'A'][A[1][3]-'A']=1;}}
	
	
	fout<<ans1;
	fout<<endl;
	fout<<ans2;
	
	
	
	
	return 0;
}
